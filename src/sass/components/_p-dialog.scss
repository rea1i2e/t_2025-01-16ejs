@use 'global' as *;

// *,
// *::before,
// *::after {
//   box-sizing: border-box;
//   margin: unset;
// }

// body {
//   font-family: Cinzel, sans-serif;
//   font-size: clamp(0.875rem, 0.821rem + 0.24vi, 1rem);
//   line-height: 1.5;
// }

// :where(a) {
//   color: inherit;
// }

:where(dialog) {
  inline-size: unset;
  max-inline-size: unset;
  block-size: unset;
  max-block-size: unset;
  padding: unset;
  margin: unset;
  color: unset;
  background-color: unset;
  border: unset;
  overflow: unset; // スクロールさせたい場合は、子孫要素で
}

:focus:not(:focus-visible) {
  outline: none;
}

:where(:root[data-mousedown] dialog *) {
  outline: none;
}

[data-modal-open]:where(:root[data-mousedown] *) {
  outline: none;
}

// .button-wrapper {
//   display: grid;
//   gap: 1lh;
//   place-items: center;
//   padding-block: 40px;
//   padding-inline: min(5vi, 20px);
// }

.modal {
  --duration: 0.5s;
  --gutter: max(5vi, 20px);
  --background: var(--color-black);
  --background-backdrop: color-mix(in srgb, var(--background), transparent 20%);

  inline-size: min(calc(100% - calc(var(--gutter) * 2)), 840px);
  block-size: min(calc(100svb - calc(var(--gutter) * 2)), 475px);
  margin: auto;
  color: var(--color-white);
  background-color: var(--background);
  box-shadow: 0 0 0 100vmax var(--background-backdrop);
  transition: opacity var(--duration), scale var(--duration);
  contain: strict;

  &:not([data-active="true"]) {
    opacity: 0;
    scale: 0.95;
  }

  &::backdrop {
    // backdrop-filter: blur(4px);
    // 　-webkit-backdrop-filter: blur(4px);
    transition: opacity 0.5s;
  }

  &:not([data-active="true"])::backdrop {
    opacity: 0;
  }
}

.container {
  block-size: 100%;
  padding: var(--gutter);
  overflow: auto;
  overscroll-behavior: contain;
}

.headline {
  inline-size: fit-content;
  margin-inline: auto;
  font-size: clamp(1rem, 0.571rem + 1.9vi, 2rem);
}

// .description {
//   margin-block-start: 1lh;
//   line-height: 1.75;
// }

.close {
  --background: var(--color-black);
  --background-active: color-mix(in srgb, var(--background) 80%, white);
  --icon-color: var(--color-white);

  position: absolute;
  inset-block-start: 4px;
  inset-inline-end: 4px;
  z-index: 1;
  inline-size: 3em;
  aspect-ratio: 1;
  appearance: none;
  cursor: pointer;
  background-color: var(--background);
  border: 0;
  border-radius: 50%;
  box-shadow: 0 0 12px 0 rgb(0 0 0 / 20%);
  transition: background-color 0.3s;

  &::before,
  &::after {
    position: absolute;
    inset: 0;
    display: inline-block;
    width: 45%;
    height: 2px;
    margin: auto;
    content: "";
    background-color: var(--color-white);
  }

  &::before {
    rotate: 45deg;
  }

  &::after {
    rotate: 135deg;
  }

  &:focus-visible {
    background-color: var(--background-active);
  }

  @media (any-hover: hover) {
    &:hover {
      background-color: var(--background-active);
    }
  }
}

.button {
  --min-inline-size: 320px;
  --background: var(--color-black);
  --background-active: color-mix(in srgb, var(--background) 80%, white);
  --text-color: var(--color-white);

  display: inline-grid;
  grid-template-columns: 1fr auto 1fr;
  place-items: center;
  inline-size: min(100%, var(--min-inline-size));
  padding-block: 1lh;
  padding-inline: 1.5em;
  font: inherit;
  color: var(--text-color);
  letter-spacing: 0.02em;
  appearance: none;
  cursor: pointer;
  background-color: var(--background);
  border: 0;
  transition: background-color 0.3s, color 0.3s;

  &::before {
    content: "";
  }

  &::after {
    display: inline-block;
    justify-self: end;
    inline-size: 1ex;
    aspect-ratio: 1;
    content: "";
    border-block-start: 1px solid;
    border-inline-end: 1px solid;
    rotate: 45deg;
  }

  &:focus-visible {
    background-color: var(--background-active);
  }

  @media (any-hover: hover) {
    &:hover {
      background-color: var(--background-active);
    }
  }
}
